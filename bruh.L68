00000408 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/15/2020 6:16:34 PM

00000400                             1      ORG $400
00000400                             2  
00000400                             3  startAddr   DS.L    1
00000404                             4  endAddr     DS.L    1
00000408                             5  
00000408  =00000000                  6  move_first2     EQU %00
00000408  =00000004                  7  movem_first4    EQU %0100
00000408  =0000000D                  8  add_first4      EQU %1101
00000408  =00000009                  9  sub_first4      EQU %1001
00000408  =00000004                 10  lea_first4      EQU %0100
00000408  =0000000C                 11  and_first4      EQU %1100
00000408  =00000008                 12  or_first4       EQU %1000
00000408  =0000000E                 13  shifts_first4   EQU %1110
00000408  =0000000B                 14  cmp_first4      EQU %1011
00000408  =00000006                 15  bcc_first4      EQU %0110
00000408  =00000004                 16  jsr_first4      EQU %0100
00000408  =00000004                 17  rts_first4      EQU %0100
00000408                            18  
00000408                            19  * for mode and reg\
00000408  =00000000                 20  zero            EQU $0000
00000408  =00000001                 21  one             EQU $0001
00000408  =00000010                 22  two             EQU $0010
00000408  =00000011                 23  three           EQU $0011
00000408  =00000100                 24  four            EQU $0100
00000408  =00000101                 25  five            EQU $0101
00000408  =00000110                 26  six             EQU $0110
00000408  =00000111                 27  seven           EQU $0111
00000408                            28  
00000408                            29  * 1.I/O person prompts user (me) for 
00000408                            30  * a starting and 
00000408                            31  * ending address in memory
00000408                            32  START:
00000408                            33  
00000408                            34  
00000408  43F9 000092B2             35  DISPLAY_START_ADDR_PROMPT   LEA     START_ADDR_PROMPT, A1
0000040E  103C 000E                 36                              MOVE.B  #14, D0
00000412  4E4F                      37                              TRAP    #15
00000414  6100 0016                 38                              BSR saveStartAddr
00000418  6000 002A                 39                              BRA printStartAddr
0000041C                            40  
0000041C  43F9 000092D6             41  DISPLAY_END_ADDR_PROMPT     LEA     END_ADDR_PROMPT, A1
00000422  103C 000E                 42                              MOVE.B  #14, D0
00000426  4E4F                      43                              TRAP    #15
00000428  6100 000E                 44                              BSR saveEndAddr
0000042C                            45  
0000042C                            46  
0000042C  103C 0004                 47  saveStartAddr   MOVE.B  #4, D0                  * User Trap Task #4 ( Read a number from the keyboard into D1.L.)
00000430  4E4F                      48                  TRAP    #15
00000432  21C1 0400                 49                  MOVE.L D1, startAddr
00000436  4E75                      50                  RTS
00000438                            51  
00000438  103C 0004                 52  saveEndAddr     MOVE.B  #4, D0
0000043C  4E4F                      53                  TRAP    #15
0000043E  21C1 0404                 54                  MOVE.L D1, endAddr
00000442  4E75                      55                  RTS
00000444                            56  
00000444  2238 0400                 57  printStartAddr  MOVE.L startAddr, D1
00000448  1A3C 0004                 58                  MOVE.B #4, D5
0000044C  4EB9 0000046C             59                  JSR PRINTHEX
00000452                            60  
00000452  43F9 000092FA             61                  LEA         NEWLINE, A1
00000458  103C 000E                 62                  MOVE.B      #14, D0
0000045C  4E4F                      63                  TRAP        #15
0000045E                            64  
0000045E  2238 0404                 65  printEndAddr    MOVE.L endAddr, D1
00000462  1A3C 0004                 66                  MOVE.B #4, D5
00000466  4EB9 0000046C             67                  JSR PRINTHEX
0000046C                            68                  
0000046C                            69  
0000046C  BA3C 0000                 70  PRINTHEX    CMP.B #0, D5
Line 71 ERROR: Undefined symbol
00000470  6700 B8A4                 71              BEQ ESCAPEFROMPRINTHEX
00000474  1611                      72              MOVE.B (A1),D3
00000476  1819                      73              MOVE.B (A1)+,D4
00000478                            74              
00000478  E80B                      75              LSR.B #4, D3
0000047A  E90C                      76              LSL.B #4, D4
0000047C  E80C                      77              LSR.B #4, D4
0000047E                            78              
0000047E  4246                      79              CLR D6
00000480  1203                      80              MOVE.B D3,D1
00000482  B63C 000A                 81              CMP.B #10,D3
00000486  6D00 0006                 82              BLT PRINTNUM
0000048A  6000 0018                 83              BRA PRINTLET
0000048E                            84  
0000048E                            85  
0000048E  0601 0030                 86  PRINTNUM    ADD.B #$30, D1
00000492  103C 0006                 87              MOVE.B #6, D0
00000496  4E4F                      88              TRAP #15
00000498                            89              
00000498  BC3C 0000                 90              CMP.B #0, D6
0000049C  6700 0020                 91              BEQ SWAP
000004A0                            92              
000004A0  5305                      93              SUB.B #1, D5
000004A2  60C8                      94              BRA PRINTHEX
000004A4                            95  
000004A4  0401 0009                 96  PRINTLET    SUB.B #9, D1
000004A8  0601 0040                 97              ADD.B #$40, D1
000004AC  103C 0006                 98              MOVE.B #6, D0
000004B0  4E4F                      99              TRAP #15
000004B2                           100              
000004B2  BC3C 0000                101              CMP.B #0, D6
000004B6  6700 0006                102              BEQ SWAP
000004BA                           103              
000004BA  5305                     104              SUB.B #1, D5
000004BC  60AE                     105              BRA PRINTHEX
000004BE                           106  
000004BE  1C3C 0001                107  SWAP        MOVE.B #1, D6
Line 108 ERROR: Undefined symbol
000004C2  6000 B852                108              BRA PRINTSEC
000004C6                           109  
000004C6                           110  ; OPCODE STUFFF
000004C6                           111  
000004C6                           112  ; $24 11 (0011 0100 00 010 001)
000004C6                           113  ; 0000 00 -> 0011 01000 = 0000 0000
000004C6                           114  ; 0000 -> 0011 01000 = 0000 0011
000004C6  1E1D                     115  GET_NIBBLE     MOVE.B (A5)+,D7
000004C8  EC4F                     116                 LSR #6,D7
000004CA                           117  
000004CA                           118  
000004CA  121D                     119  GET_TWO_BITS    MOVE.B  (A5)+, D1
000004CC                           120                  * if D1 == 00, it's either MOVE or MOVEA
000004CC                           121                  *   branch to MOVE_OPCODE
000004CC                           122                  * else:
000004CC                           123                  *   branch GET_NEXT_GET_TWO_BITS
000004CC                           124  
000004CC  141D                     125  GET_NEXT_GET_TWO_BITS   MOVE.B (A5)+, D2
000004CE                           126                          * check if first4 is equal to ADD 
000004CE                           127                          * branch to add
000004CE  60FC                     128                          BRA GET_NEXT_GET_TWO_BITS
000004D0                           129  
000004D0                           130                  
000004D0                           131      INCLUDE 'test.x68'
00009000                           132      ORG    $9000
00009000  240A                     133      MOVE.l A2,D2 ; $2411 (0011 010 000 010 001)
00009002  2442                     134      MOVE.l D2,A2
00009004                           135      
00009004                           136          
00009004  23F9 AAAAAAAA 55555555   137      MOVE.L      $AAAAAAAA, $55555555 
0000900E  0602 0042                138      ADDI.B      #$42,D2  
00009012  0683 24422442            139      ADDI.L      #$24422442,D3
00009018  0644 2442                140      ADDI.W      #$2442,D4
0000901C                           141       
0000901C                           142      
0000901C  D200                     143      ADD.B       D0,D1
0000901E  D041                     144      ADD.W       D1,D0
00009020  D2B8 1234                145      ADD.L       $00001234,D1
00009024  D378 1234                146      ADD         D1,$00001234
00009028  D2B9 FFFF1234            147      ADD.L       $FFFF1234,D1
0000902E  D539 FFFF1234            148      ADD.B       D2, $FFFF1234
00009034  5205                     149      ADD.B        #1,D5
00009036  0646 000A                150      ADD.W        #10,D6
0000903A  5A49                     151      ADDA        #5,A1
0000903C  D4F8 1234                152      ADDA.W      $0001234,A2
00009040  D1F9 FFFF1234            153      ADDA.L      $FFFF1234,A0
00009046  23F9 AAAAAAAA 55555555   154      MOVE.L      $AAAAAAAA, $55555555
00009050  0644 000A                155      ADDI        #10,D4
00009054  0444 000A                156      SUBI        #10,D4
00009058  0C43 0003                157      CMPI        #3,D3
0000905C  0246 0004                158      ANDI        #4,D6
00009060  0085 F3D631AD            159      ORI.L       #4090900909,D5
00009066  2A3C F3D631AD            160      MOVE.L      #4090900909,D5
0000906C  8ABC F3D631AD            161      OR.L        #4090900909,D5
00009072  0A85 F3D631AD            162      EORI.L      #4090900909,D5
00009078                           163  
00009078  49F8 334B                164      LEA         $3333+24,A4
0000907C  4BF9 0FFFFFFF            165      LEA         $FFFFFFF,A5
00009082                           166      
00009082  E322                     167      ASL.B       D1,D2
00009084  E362                     168      ASL.W       D1,D2
00009086  E7A4                     169      ASL.L       D3,D4
00009088  E105                     170      ASL.B       #8,D5
0000908A  E946                     171      ASL.W       #4,D6
0000908C  E381                     172      ASL.L       #1,D1  
0000908E                           173      
0000908E  E1F8 1234                174      ASL         $00001234
00009092  E1F9 FFFF1123            175      ASL         $FFFF1123
00009098  E0F8 1234                176      ASR         $00001234
0000909C  E0F9 FFFF1123            177      ASR         $FFFF1123
000090A2  E0D9                     178      ASR         (A1)+
000090A4  E0E2                     179      ASR         -(A2) 
000090A6                           180  
000090A6  6000 0FB8                181      BRA $A060
000090AA  6700 0E96                182      BEQ $9F42
000090AE  6D00 0F50                183      BLT $A000
000090B2  6F00 EF4E                184      BLE $8002
000090B6  6C00 0D7C                185      BGE $9E34
000090BA  6E00 9F44                186      BGT $3000
000090BE  6200 E7A5                187      BHI $7865
000090C2  6300 C6A3                188      BLS $5767
000090C6  6400 D7BF                189      BCC $6887
000090CA  6500 E58D                190      BCS $7659
000090CE  6600 D4B9                191      BNE $6589
000090D2  6700 E5B4                192      BEQ $7688
000090D6  6800 F68F                193      BVC $8767
000090DA  6900 D67A                194      BVS $6756
000090DE  6A00 08B9                195      BPL $9999
000090E2  6A00 1792                196      BPL $A876
000090E6  6C00 D6B0                197      BGE $6798
000090EA  6E00 089B                198      BGT $9987
000090EE  6F00 3BDC                199      BLE $CCCC   
000090F2                           200      
000090F2                           201    
000090F2  4E71                     202      NOP *NEW
000090F4  4E75                     203      RTS
000090F6  4E92                     204      JSR         (A2)
000090F8  4EB9 00123658            205      JSR         $00123658
000090FE  4BF8 1234                206      LEA         $00001234, A5
00009102  4BD4                     207      LEA         (A4),A5
00009104  8441                     208      OR          D1,D2
00009106  8378 1234                209      OR          D1, $00001234
0000910A  8551                     210      OR          D2, (A1)
0000910C  8651                     211      OR          (A1),D3
0000910E  835A                     212      OR          D1, (A2)+
00009110  8662                     213      OR          -(A2),D3
00009112  8773 5000                214      OR          D3, 0(A3,D5) * One known bug, the data is interpretted as ADDQ
00009116  8773 5000                215      OR          D3, 0(A3,D5)
0000911A  9805                     216      SUB.B       D5,D4
0000911C  9845                     217      SUB.W       D5,D4
0000911E  9885                     218      SUB.L       D5,D4
00009120  93B8 1234                219      SUB.L       D1,$00001234
00009124  92B8 1234                220      SUB.L       $00001234,D1
00009128  93B9 FFFF1234            221      SUB.L       D1, $FFFF1234
0000912E  92B9 FFFF1234            222      SUB.L       $FFFF1234,D1
00009134  9650                     223      SUB         (A0),D3
00009136  9351                     224      SUB         D1, (A1)
00009138  9661                     225      SUB         -(A1),D3
0000913A  9973 5000                226      SUB         D4, 0(A3,D5) * One known bug, data is interpretted as ADDQ
0000913E  9973 5000                227      SUB         D4, 0(A3,D5) * P.S: Not a bug, a feature    
00009142  C3FC 002D                228      MULS        #45,D1
00009146  CFF8 1234                229      MULS        $00001234,D7
0000914A  C5F9 FFFF1000            230      MULS        $FFFF1000, D2  
00009150                           231      
00009150  FFFF FFFF                232      SIMHALT
00009154  0A02 0005                233      EOR.B #5,D2
00009158                           234      
00009158  48A7 4DA6                235      MOVEM D1/D4-D5/D7/A0/A2/A5-A6,-(SP)
0000915C  4C9F 65B2                236      MOVEM (SP)+,D1/D4-D5/D7/A0/A2/A5-A6
00009160  48A7 FFFF                237      MOVEM D0-D7/A0-A7,-(SP)
00009164  4C9F FFFF                238      MOVEM (SP)+,D0-D7/A0-A7
00009168                           239      
00009168  4CB8 5F00 4032           240      MOVEM $4032,A0-A4/A6
0000916E  48B8 001E 56C4           241      MOVEM D1-D4,($56C4)
00009174                           242      
00009174  4CB9 0001 0000A000       243      MOVEM ($A000),D0
0000917C  48B9 0001 0000A000       244      MOVEM D0,($A000)
00009184                           245  
00009184  82FC 002D                246      DIVU        #45,D1
00009188  8EF8 1234                247      DIVU        $00001234,D7
0000918C  84F9 FFFF1000            248      DIVU        $FFFF1000, D2    
00009192  4642                     249      NOT         D2 *NEW
00009194  E7F8 1234                250      ROL         $00001234
00009198  E7F9 FFFF1123            251      ROL         $FFFF1123
0000919E  E6F8 1234                252      ROR         $00001234
000091A2  E6F9 FFFF1123            253      ROR         $FFFF1123
000091A8  E6D9                     254      ROR         (A1)+
000091AA  E6E2                     255      ROR         -(A2)    
000091AC  E33A                     256      ROL.B       D1,D2
000091AE  E37A                     257      ROL.W       D1,D2
000091B0  E7BC                     258      ROL.L       D3,D4
000091B2  E11D                     259      ROL.B       #8,D5
000091B4  E95E                     260      ROL.W       #4,D6
000091B6  E399                     261      ROL.L       #1,D1     
000091B8  E3F8 1234                262      LSL         $00001234
000091BC  E3F9 FFFF1123            263      LSL         $FFFF1123
000091C2  E2F8 1234                264      LSR         $00001234
000091C6  E2F9 FFFF1123            265      LSR         $FFFF1123
000091CC  E2D9                     266      LSR         (A1)+
000091CE  E2E2                     267      LSR         -(A2)    
000091D0  E32A                     268      LSL.B       D1,D2
000091D2  E36A                     269      LSL.W       D1,D2
000091D4  E7AC                     270      LSL.L       D3,D4
000091D6  E10D                     271      LSL.B       #8,D5
000091D8  E94E                     272      LSL.W       #4,D6
000091DA  E389                     273      LSL.L       #1,D1  
000091DC                           274  
000091DC  31C1 1234                275      MOVE        D1,$00001234
000091E0  2038 1234                276      MOVE.L      $00001234,D0
000091E4  31C1 1234                277      MOVE.W      D1, $00001234
000091E8  1A39 FFFF1234            278      MOVE.B      $FFFF1234,D5
000091EE  13D1 00012134            279      MOVE.B      (A1),$000012134
000091F4  33E2 FFFF1234            280      MOVE.W      -(A2),$FFFF1234
000091FA  2A19                     281      MOVE.L      (A1)+, D5
000091FC  360A                     282      MOVE.W      A2,D3
000091FE  3A3C 007B                283      MOVE.W      #123, D5
00009202  1C3C 000C                284      MOVE.B      #12,D6
00009206  7A0E                     285      MOVE.L      #14,D5
00009208  7E14                     286      MOVE.L      #20, D7
0000920A  3278 1234                287      MOVEA.W     $00001234,A1
0000920E  2479 FFFF1234            288      MOVEA.L     $FFFF1234,A2
00009214  3252                     289      MOVEA.W     (A2),A1
00009216  265A                     290      MOVEA.L     (A2)+,A3
00009218  3663                     291      MOVEA.W     -(A3),A3
0000921A  3667                     292      MOVEA.W     -(SP),A3
0000921C  3867                     293      MOVEA.W     -(A7),A4
0000921E                           294  
0000921E  4642                     295      NOT         D2
00009220                           296      *   JUST NOW IMPLEMENTED
00009220  5001                     297      ADDQ.B       #8,D1
00009222  5049                     298      ADDQ.W       #08,A1
00009224  5081                     299      ADDQ.L       #00000008,D1
00009226  5241                     300      ADDQ         #1,D1
00009228  4E71                     301      NOP
0000922A                           302      
0000922A  FFFF FFFF                303      SIMHALT             ; halt simulator
0000922E                           304  TEST
0000922E  323C 0000                305      MOVE.W      #0,D1
00009232  4E75                     306      RTS  
00009234                           307  NO_TEST
00009234  343C 0004                308      MOVE.W     #4,D2
00009238  4E75                     309      RTS
00009238  4E75                     310  -------------------- end include --------------------
0000923A                           311      INCLUDE 'string2hex.x68'
0000923A                           312  
0000923A                           313  STRING_TO_HEX:
0000923A  4280                     314      CLR.L D0 ; just in case
0000923C  7208                     315      MOVE.L #8,D1 ; reverse counter
0000923E  4282                     316      CLR.L D2 ; temp storage
00009240                           317  
00009240                           318  CONVERSION_LOOP
00009240  B27C 0000                319      CMP #0,D1
00009244  6700 0060                320      BEQ EXIT_LOOP
00009248  2419                     321      MOVE.L (A1)+, D2 ; move to register to save time
0000924A                           322  
0000924A  B47C 0066                323      CMP #'f',D2 ;lowercase base-36
0000924E  6E00 0050                324      BGT ERROR
00009252  B47C 0061                325      CMP #'a',D2 ;lowercase hex
00009256  6C00 0026                326      BGE ALPHA_LOWER
0000925A  B47C 0046                327      CMP #'F',D2 ;uppercase base-36
0000925E  6E00 0040                328      BGT ERROR
00009262  B47C 0041                329      CMP #'A',D2 ;uppercase hex
00009266  6C00 001E                330      BGE ALPHA_UPPER
0000926A  B47C 0039                331      CMP #'9',D2 ;some characters in between (9,A)
0000926E  6E00 0030                332      BGT ERROR
00009272  B47C 0030                333      CMP #'0',D2 ;numeric hex
00009276  6C00 0016                334      BGE NUMERIC
0000927A  6000 0024                335      BRA ERROR ;some characters between (0,'0')
0000927E                           336  
0000927E                           337  ALPHA_LOWER
0000927E  0442 0061                338      SUB #'a',D2
00009282  0640 000A                339      ADD #10,D0
00009286                           340  ALPHA_UPPER
00009286  0442 0041                341      SUB #'A',D2
0000928A  0642 000A                342      ADD #10,D2
0000928E                           343  NUMERIC
0000928E  0442 0030                344      SUB #'0',D2
00009292                           345      
00009292                           346  MOVE_TO_REG
00009292  7604                     347      MOVE.L #4,D3
00009294  C6FC 0008                348      MULU #8,D3
00009298  E76A                     349      LSL D3,D2
0000929A  8042                     350      OR D2,D0
0000929C                           351  
0000929C  5301                     352      SUB.B #1,D1
0000929E  60A0                     353      BRA CONVERSION_LOOP
000092A0                           354  
000092A0                           355  ERROR
000092A0  4280                     356      CLR.L D0
000092A2  3E3C FFFF                357      MOVE #$FFFFFFFF,D7
000092A6                           358  
000092A6                           359  EXIT_LOOP
000092A6  4E75                     360      RTS
000092A6  4E75                     361  -------------------- end include --------------------
000092A8                           362  
000092A8                           363  
000092A8= 74 65 78 74 2E 74 ...    364  filename    dc.b    'text.txt', 0
000092B2= 456E7465 72207374 ...    365  START_ADDR_PROMPT   DC.L 'Enter starting address in hex : ', 0
000092D6= 456E7465 7220656E ...    366  END_ADDR_PROMPT     DC.L 'Enter ending address in hex : ', 0 
000092FA  =0000000D                367  CR              EQU         $0D
000092FA  =0000000A                368  LF              EQU         $0A
000092FA= 0D 0A 00                 369  newLine         DC.B        CR,LF,0
000092FD                           370  
000092FD                           371  
000092FE                           372      DS.W 0 ;force even-word alignment
000092FE                           373  
000092FE                           374      END START

2 errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_FIRST4          D
ALPHA_LOWER         927E
ALPHA_UPPER         9286
AND_FIRST4          C
BCC_FIRST4          6
CMP_FIRST4          B
CONVERSION_LOOP     9240
CR                  D
DISPLAY_END_ADDR_PROMPT  41C
DISPLAY_START_ADDR_PROMPT  408
ENDADDR             404
END_ADDR_PROMPT     92D6
ERROR               92A0
EXIT_LOOP           92A6
FILENAME            92A8
FIVE                101
FOUR                100
GET_NEXT_GET_TWO_BITS  4CC
GET_NIBBLE          4C6
GET_TWO_BITS        4CA
JSR_FIRST4          4
LEA_FIRST4          4
LF                  A
MOVEM_FIRST4        4
MOVE_FIRST2         0
MOVE_TO_REG         9292
NEWLINE             92FA
NO_TEST             9234
NUMERIC             928E
ONE                 1
OR_FIRST4           8
PRINTENDADDR        45E
PRINTHEX            46C
PRINTLET            4A4
PRINTNUM            48E
PRINTSTARTADDR      444
RTS_FIRST4          4
SAVEENDADDR         438
SAVESTARTADDR       42C
SEVEN               111
SHIFTS_FIRST4       E
SIX                 110
START               408
STARTADDR           400
START_ADDR_PROMPT   92B2
STRING_TO_HEX       923A
SUB_FIRST4          9
SWAP                4BE
TEST                922E
THREE               11
TWO                 10
ZERO                0
