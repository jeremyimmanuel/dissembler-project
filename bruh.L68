00000408 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/15/2020 7:18:54 PM

00000400                             1      ORG $400
00000400                             2  
00000400                             3  startAddr   DS.L    1
00000404                             4  endAddr     DS.L    1
00000408                             5  
00000408  =00000000                  6  move_first2     EQU %00
00000408  =00000004                  7  movem_first4    EQU %0100
00000408  =0000000D                  8  add_first4      EQU %1101
00000408  =00000009                  9  sub_first4      EQU %1001
00000408  =00000004                 10  lea_first4      EQU %0100
00000408  =0000000C                 11  and_first4      EQU %1100
00000408  =00000008                 12  or_first4       EQU %1000
00000408  =0000000E                 13  shifts_first4   EQU %1110
00000408  =0000000B                 14  cmp_first4      EQU %1011
00000408  =00000006                 15  bcc_first4      EQU %0110
00000408  =00000004                 16  jsr_first4      EQU %0100
00000408  =00000004                 17  rts_first4      EQU %0100
00000408                            18  
00000408                            19  * for mode and reg\
00000408  =00000000                 20  zero            EQU $0000
00000408  =00000001                 21  one             EQU $0001
00000408  =00000010                 22  two             EQU $0010
00000408  =00000011                 23  three           EQU $0011
00000408  =00000100                 24  four            EQU $0100
00000408  =00000101                 25  five            EQU $0101
00000408  =00000110                 26  six             EQU $0110
00000408  =00000111                 27  seven           EQU $0111
00000408                            28  
00000408                            29  * 1.I/O person prompts user (me) for 
00000408                            30  * a starting and 
00000408                            31  * ending address in memory
00000408                            32  START:
00000408                            33  
00000408                            34  
00000408  43F9 000092B2             35  DISPLAY_START_ADDR_PROMPT   LEA     START_ADDR_PROMPT, A1
0000040E  103C 000E                 36                              MOVE.B  #14, D0
00000412  4E4F                      37                              TRAP    #15
00000414  6100 0016                 38                              BSR saveStartAddr
00000418  6000 002A                 39                              BRA printStartAddr
0000041C                            40  
0000041C  43F9 000092D6             41  DISPLAY_END_ADDR_PROMPT     LEA     END_ADDR_PROMPT, A1
00000422  103C 000E                 42                              MOVE.B  #14, D0
00000426  4E4F                      43                              TRAP    #15
00000428  6100 000E                 44                              BSR saveEndAddr
0000042C                            45  
0000042C                            46  
0000042C  103C 0004                 47  saveStartAddr   MOVE.B  #4, D0                  * User Trap Task #4 ( Read a number from the keyboard into D1.L.)
00000430  4E4F                      48                  TRAP    #15
00000432  21C1 0400                 49                  MOVE.L D1, startAddr
00000436  4E75                      50                  RTS
00000438                            51  
00000438  103C 0004                 52  saveEndAddr     MOVE.B  #4, D0
0000043C  4E4F                      53                  TRAP    #15
0000043E  21C1 0404                 54                  MOVE.L D1, endAddr
00000442  4E75                      55                  RTS
00000444                            56  
00000444  2238 0400                 57  printStartAddr  MOVE.L startAddr, D1
00000448  1A3C 0004                 58                  MOVE.B #4, D5
0000044C  4EB9 0000046C             59                  JSR PRINTHEX
00000452                            60  
00000452  43F9 000092FA             61                  LEA         NEWLINE, A1
00000458  103C 000E                 62                  MOVE.B      #14, D0
0000045C  4E4F                      63                  TRAP        #15
0000045E                            64  
0000045E  2238 0404                 65  printEndAddr    MOVE.L endAddr, D1
00000462  1A3C 0004                 66                  MOVE.B #4, D5
00000466  4EB9 0000046C             67                  JSR PRINTHEX
0000046C                            68                  
0000046C                            69  
0000046C  BA3C 0000                 70  PRINTHEX    CMP.B #0, D5
00000470  6700 002A                 71              BEQ ESCAPEFROMPRINTHEX
00000474  1611                      72              MOVE.B (A1),D3
00000476  1819                      73              MOVE.B (A1)+,D4
00000478                            74              
00000478  E80B                      75              LSR.B #4, D3
0000047A  E90C                      76              LSL.B #4, D4
0000047C  E80C                      77              LSR.B #4, D4
0000047E                            78              
0000047E  4246                      79              CLR D6
00000480  1203                      80              MOVE.B D3,D1
00000482  B63C 000A                 81              CMP.B #10,D3
00000486  6D00 0016                 82              BLT PRINTNUM
0000048A  6000 0028                 83              BRA PRINTLET
0000048E                            84  
0000048E  1204                      85  PRINTSEC    MOVE.B D4,D1
00000490  B83C 000A                 86              CMP.B #10,D4
00000494  6D00 0008                 87              BLT PRINTNUM
00000498  6000 001A                 88              BRA PRINTLET
0000049C                            89  
0000049C  4E75                      90  ESCAPEFROMPRINTHEX     RTS                 * Control flow away from CONVERT subroutines.            
0000049E                            91  
0000049E  0601 0030                 92  PRINTNUM    ADD.B #$30, D1
000004A2  103C 0006                 93              MOVE.B #6, D0
000004A6  4E4F                      94              TRAP #15
000004A8                            95              
000004A8  BC3C 0000                 96              CMP.B #0, D6
000004AC  6700 0020                 97              BEQ SWAP
000004B0                            98              
000004B0  5305                      99              SUB.B #1, D5
000004B2  60B8                     100              BRA PRINTHEX
000004B4                           101  
000004B4  0401 0009                102  PRINTLET    SUB.B #9, D1
000004B8  0601 0040                103              ADD.B #$40, D1
000004BC  103C 0006                104              MOVE.B #6, D0
000004C0  4E4F                     105              TRAP #15
000004C2                           106              
000004C2  BC3C 0000                107              CMP.B #0, D6
000004C6  6700 0006                108              BEQ SWAP
000004CA                           109              
000004CA  5305                     110              SUB.B #1, D5
000004CC  609E                     111              BRA PRINTHEX
000004CE                           112  
000004CE  1C3C 0001                113  SWAP        MOVE.B #1, D6
000004D2  60BA                     114              BRA PRINTSEC
000004D4                           115  
000004D4                           116      
000004D4                           117  
000004D4                           118  ; OPCODE STUFFF
000004D4                           119  
000004D4                           120  ; $24 11 (0011 0100 00 010 001)
000004D4                           121  ; 0000 00 -> 0011 01000 = 0000 0000
000004D4                           122  ; 0000 -> 0011 01000 = 0000 0011
000004D4  1E1D                     123  GET_NIBBLE     MOVE.B (A5)+,D7
000004D6  EC4F                     124                 LSR #6,D7
000004D8                           125  
000004D8                           126  
000004D8  121D                     127  GET_TWO_BITS    MOVE.B  (A5)+, D1
000004DA                           128                  * if D1 == 00, it's either MOVE or MOVEA
000004DA                           129                  *   branch to MOVE_OPCODE
000004DA                           130                  * else:
000004DA                           131                  *   branch GET_NEXT_GET_TWO_BITS
000004DA                           132  
000004DA  141D                     133  GET_NEXT_GET_TWO_BITS   MOVE.B (A5)+, D2
000004DC                           134                          * check if first4 is equal to ADD 
000004DC                           135                          * branch to add
000004DC  60FC                     136                          BRA GET_NEXT_GET_TWO_BITS
000004DE                           137  
000004DE                           138                  
000004DE                           139      INCLUDE 'test.x68'
00009000                           140      ORG    $9000
00009000  240A                     141      MOVE.l A2,D2 ; $2411 (0011 010 000 010 001)
00009002  2442                     142      MOVE.l D2,A2
00009004                           143      
00009004                           144          
00009004  23F9 AAAAAAAA 55555555   145      MOVE.L      $AAAAAAAA, $55555555 
0000900E  0602 0042                146      ADDI.B      #$42,D2  
00009012  0683 24422442            147      ADDI.L      #$24422442,D3
00009018  0644 2442                148      ADDI.W      #$2442,D4
0000901C                           149       
0000901C                           150      
0000901C  D200                     151      ADD.B       D0,D1
0000901E  D041                     152      ADD.W       D1,D0
00009020  D2B8 1234                153      ADD.L       $00001234,D1
00009024  D378 1234                154      ADD         D1,$00001234
00009028  D2B9 FFFF1234            155      ADD.L       $FFFF1234,D1
0000902E  D539 FFFF1234            156      ADD.B       D2, $FFFF1234
00009034  5205                     157      ADD.B        #1,D5
00009036  0646 000A                158      ADD.W        #10,D6
0000903A  5A49                     159      ADDA        #5,A1
0000903C  D4F8 1234                160      ADDA.W      $0001234,A2
00009040  D1F9 FFFF1234            161      ADDA.L      $FFFF1234,A0
00009046  23F9 AAAAAAAA 55555555   162      MOVE.L      $AAAAAAAA, $55555555
00009050  0644 000A                163      ADDI        #10,D4
00009054  0444 000A                164      SUBI        #10,D4
00009058  0C43 0003                165      CMPI        #3,D3
0000905C  0246 0004                166      ANDI        #4,D6
00009060  0085 F3D631AD            167      ORI.L       #4090900909,D5
00009066  2A3C F3D631AD            168      MOVE.L      #4090900909,D5
0000906C  8ABC F3D631AD            169      OR.L        #4090900909,D5
00009072  0A85 F3D631AD            170      EORI.L      #4090900909,D5
00009078                           171  
00009078  49F8 334B                172      LEA         $3333+24,A4
0000907C  4BF9 0FFFFFFF            173      LEA         $FFFFFFF,A5
00009082                           174      
00009082  E322                     175      ASL.B       D1,D2
00009084  E362                     176      ASL.W       D1,D2
00009086  E7A4                     177      ASL.L       D3,D4
00009088  E105                     178      ASL.B       #8,D5
0000908A  E946                     179      ASL.W       #4,D6
0000908C  E381                     180      ASL.L       #1,D1  
0000908E                           181      
0000908E  E1F8 1234                182      ASL         $00001234
00009092  E1F9 FFFF1123            183      ASL         $FFFF1123
00009098  E0F8 1234                184      ASR         $00001234
0000909C  E0F9 FFFF1123            185      ASR         $FFFF1123
000090A2  E0D9                     186      ASR         (A1)+
000090A4  E0E2                     187      ASR         -(A2) 
000090A6                           188  
000090A6  6000 0FB8                189      BRA $A060
000090AA  6700 0E96                190      BEQ $9F42
000090AE  6D00 0F50                191      BLT $A000
000090B2  6F00 EF4E                192      BLE $8002
000090B6  6C00 0D7C                193      BGE $9E34
000090BA  6E00 9F44                194      BGT $3000
000090BE  6200 E7A5                195      BHI $7865
000090C2  6300 C6A3                196      BLS $5767
000090C6  6400 D7BF                197      BCC $6887
000090CA  6500 E58D                198      BCS $7659
000090CE  6600 D4B9                199      BNE $6589
000090D2  6700 E5B4                200      BEQ $7688
000090D6  6800 F68F                201      BVC $8767
000090DA  6900 D67A                202      BVS $6756
000090DE  6A00 08B9                203      BPL $9999
000090E2  6A00 1792                204      BPL $A876
000090E6  6C00 D6B0                205      BGE $6798
000090EA  6E00 089B                206      BGT $9987
000090EE  6F00 3BDC                207      BLE $CCCC   
000090F2                           208      
000090F2                           209    
000090F2  4E71                     210      NOP *NEW
000090F4  4E75                     211      RTS
000090F6  4E92                     212      JSR         (A2)
000090F8  4EB9 00123658            213      JSR         $00123658
000090FE  4BF8 1234                214      LEA         $00001234, A5
00009102  4BD4                     215      LEA         (A4),A5
00009104  8441                     216      OR          D1,D2
00009106  8378 1234                217      OR          D1, $00001234
0000910A  8551                     218      OR          D2, (A1)
0000910C  8651                     219      OR          (A1),D3
0000910E  835A                     220      OR          D1, (A2)+
00009110  8662                     221      OR          -(A2),D3
00009112  8773 5000                222      OR          D3, 0(A3,D5) * One known bug, the data is interpretted as ADDQ
00009116  8773 5000                223      OR          D3, 0(A3,D5)
0000911A  9805                     224      SUB.B       D5,D4
0000911C  9845                     225      SUB.W       D5,D4
0000911E  9885                     226      SUB.L       D5,D4
00009120  93B8 1234                227      SUB.L       D1,$00001234
00009124  92B8 1234                228      SUB.L       $00001234,D1
00009128  93B9 FFFF1234            229      SUB.L       D1, $FFFF1234
0000912E  92B9 FFFF1234            230      SUB.L       $FFFF1234,D1
00009134  9650                     231      SUB         (A0),D3
00009136  9351                     232      SUB         D1, (A1)
00009138  9661                     233      SUB         -(A1),D3
0000913A  9973 5000                234      SUB         D4, 0(A3,D5) * One known bug, data is interpretted as ADDQ
0000913E  9973 5000                235      SUB         D4, 0(A3,D5) * P.S: Not a bug, a feature    
00009142  C3FC 002D                236      MULS        #45,D1
00009146  CFF8 1234                237      MULS        $00001234,D7
0000914A  C5F9 FFFF1000            238      MULS        $FFFF1000, D2  
00009150                           239      
00009150  FFFF FFFF                240      SIMHALT
00009154  0A02 0005                241      EOR.B #5,D2
00009158                           242      
00009158  48A7 4DA6                243      MOVEM D1/D4-D5/D7/A0/A2/A5-A6,-(SP)
0000915C  4C9F 65B2                244      MOVEM (SP)+,D1/D4-D5/D7/A0/A2/A5-A6
00009160  48A7 FFFF                245      MOVEM D0-D7/A0-A7,-(SP)
00009164  4C9F FFFF                246      MOVEM (SP)+,D0-D7/A0-A7
00009168                           247      
00009168  4CB8 5F00 4032           248      MOVEM $4032,A0-A4/A6
0000916E  48B8 001E 56C4           249      MOVEM D1-D4,($56C4)
00009174                           250      
00009174  4CB9 0001 0000A000       251      MOVEM ($A000),D0
0000917C  48B9 0001 0000A000       252      MOVEM D0,($A000)
00009184                           253  
00009184  82FC 002D                254      DIVU        #45,D1
00009188  8EF8 1234                255      DIVU        $00001234,D7
0000918C  84F9 FFFF1000            256      DIVU        $FFFF1000, D2    
00009192  4642                     257      NOT         D2 *NEW
00009194  E7F8 1234                258      ROL         $00001234
00009198  E7F9 FFFF1123            259      ROL         $FFFF1123
0000919E  E6F8 1234                260      ROR         $00001234
000091A2  E6F9 FFFF1123            261      ROR         $FFFF1123
000091A8  E6D9                     262      ROR         (A1)+
000091AA  E6E2                     263      ROR         -(A2)    
000091AC  E33A                     264      ROL.B       D1,D2
000091AE  E37A                     265      ROL.W       D1,D2
000091B0  E7BC                     266      ROL.L       D3,D4
000091B2  E11D                     267      ROL.B       #8,D5
000091B4  E95E                     268      ROL.W       #4,D6
000091B6  E399                     269      ROL.L       #1,D1     
000091B8  E3F8 1234                270      LSL         $00001234
000091BC  E3F9 FFFF1123            271      LSL         $FFFF1123
000091C2  E2F8 1234                272      LSR         $00001234
000091C6  E2F9 FFFF1123            273      LSR         $FFFF1123
000091CC  E2D9                     274      LSR         (A1)+
000091CE  E2E2                     275      LSR         -(A2)    
000091D0  E32A                     276      LSL.B       D1,D2
000091D2  E36A                     277      LSL.W       D1,D2
000091D4  E7AC                     278      LSL.L       D3,D4
000091D6  E10D                     279      LSL.B       #8,D5
000091D8  E94E                     280      LSL.W       #4,D6
000091DA  E389                     281      LSL.L       #1,D1  
000091DC                           282  
000091DC  31C1 1234                283      MOVE        D1,$00001234
000091E0  2038 1234                284      MOVE.L      $00001234,D0
000091E4  31C1 1234                285      MOVE.W      D1, $00001234
000091E8  1A39 FFFF1234            286      MOVE.B      $FFFF1234,D5
000091EE  13D1 00012134            287      MOVE.B      (A1),$000012134
000091F4  33E2 FFFF1234            288      MOVE.W      -(A2),$FFFF1234
000091FA  2A19                     289      MOVE.L      (A1)+, D5
000091FC  360A                     290      MOVE.W      A2,D3
000091FE  3A3C 007B                291      MOVE.W      #123, D5
00009202  1C3C 000C                292      MOVE.B      #12,D6
00009206  7A0E                     293      MOVE.L      #14,D5
00009208  7E14                     294      MOVE.L      #20, D7
0000920A  3278 1234                295      MOVEA.W     $00001234,A1
0000920E  2479 FFFF1234            296      MOVEA.L     $FFFF1234,A2
00009214  3252                     297      MOVEA.W     (A2),A1
00009216  265A                     298      MOVEA.L     (A2)+,A3
00009218  3663                     299      MOVEA.W     -(A3),A3
0000921A  3667                     300      MOVEA.W     -(SP),A3
0000921C  3867                     301      MOVEA.W     -(A7),A4
0000921E                           302  
0000921E  4642                     303      NOT         D2
00009220                           304      *   JUST NOW IMPLEMENTED
00009220  5001                     305      ADDQ.B       #8,D1
00009222  5049                     306      ADDQ.W       #08,A1
00009224  5081                     307      ADDQ.L       #00000008,D1
00009226  5241                     308      ADDQ         #1,D1
00009228  4E71                     309      NOP
0000922A                           310      
0000922A  FFFF FFFF                311      SIMHALT             ; halt simulator
0000922E                           312  TEST
0000922E  323C 0000                313      MOVE.W      #0,D1
00009232  4E75                     314      RTS  
00009234                           315  NO_TEST
00009234  343C 0004                316      MOVE.W     #4,D2
00009238  4E75                     317      RTS
00009238  4E75                     318  -------------------- end include --------------------
0000923A                           319      INCLUDE 'string2hex.x68'
0000923A                           320  
0000923A                           321  STRING_TO_HEX:
0000923A  4280                     322      CLR.L D0 ; just in case
0000923C  7208                     323      MOVE.L #8,D1 ; reverse counter
0000923E  4282                     324      CLR.L D2 ; temp storage
00009240                           325  
00009240                           326  CONVERSION_LOOP
00009240  B27C 0000                327      CMP #0,D1
00009244  6700 0060                328      BEQ EXIT_LOOP
00009248  2419                     329      MOVE.L (A1)+, D2 ; move to register to save time
0000924A                           330  
0000924A  B47C 0066                331      CMP #'f',D2 ;lowercase base-36
0000924E  6E00 0050                332      BGT ERROR
00009252  B47C 0061                333      CMP #'a',D2 ;lowercase hex
00009256  6C00 0026                334      BGE ALPHA_LOWER
0000925A  B47C 0046                335      CMP #'F',D2 ;uppercase base-36
0000925E  6E00 0040                336      BGT ERROR
00009262  B47C 0041                337      CMP #'A',D2 ;uppercase hex
00009266  6C00 001E                338      BGE ALPHA_UPPER
0000926A  B47C 0039                339      CMP #'9',D2 ;some characters in between (9,A)
0000926E  6E00 0030                340      BGT ERROR
00009272  B47C 0030                341      CMP #'0',D2 ;numeric hex
00009276  6C00 0016                342      BGE NUMERIC
0000927A  6000 0024                343      BRA ERROR ;some characters between (0,'0')
0000927E                           344  
0000927E                           345  ALPHA_LOWER
0000927E  0442 0061                346      SUB #'a',D2
00009282  0640 000A                347      ADD #10,D0
00009286                           348  ALPHA_UPPER
00009286  0442 0041                349      SUB #'A',D2
0000928A  0642 000A                350      ADD #10,D2
0000928E                           351  NUMERIC
0000928E  0442 0030                352      SUB #'0',D2
00009292                           353      
00009292                           354  MOVE_TO_REG
00009292  7604                     355      MOVE.L #4,D3
00009294  C6FC 0008                356      MULU #8,D3
00009298  E76A                     357      LSL D3,D2
0000929A  8042                     358      OR D2,D0
0000929C                           359  
0000929C  5301                     360      SUB.B #1,D1
0000929E  60A0                     361      BRA CONVERSION_LOOP
000092A0                           362  
000092A0                           363  ERROR
000092A0  4280                     364      CLR.L D0
000092A2  3E3C FFFF                365      MOVE #$FFFFFFFF,D7
000092A6                           366  
000092A6                           367  EXIT_LOOP
000092A6  4E75                     368      RTS
000092A6  4E75                     369  -------------------- end include --------------------
000092A8                           370  
000092A8                           371  
000092A8= 74 65 78 74 2E 74 ...    372  filename    dc.b    'text.txt', 0
000092B2= 456E7465 72207374 ...    373  START_ADDR_PROMPT   DC.L 'Enter starting address in hex : ', 0
000092D6= 456E7465 7220656E ...    374  END_ADDR_PROMPT     DC.L 'Enter ending address in hex : ', 0 
000092FA  =0000000D                375  CR              EQU         $0D
000092FA  =0000000A                376  LF              EQU         $0A
000092FA= 0D 0A 00                 377  newLine         DC.B        CR,LF,0
000092FD                           378  
000092FD                           379  
000092FE                           380      DS.W 0 ;force even-word alignment
000092FE                           381  
000092FE                           382      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_FIRST4          D
ALPHA_LOWER         927E
ALPHA_UPPER         9286
AND_FIRST4          C
BCC_FIRST4          6
CMP_FIRST4          B
CONVERSION_LOOP     9240
CR                  D
DISPLAY_END_ADDR_PROMPT  41C
DISPLAY_START_ADDR_PROMPT  408
ENDADDR             404
END_ADDR_PROMPT     92D6
ERROR               92A0
ESCAPEFROMPRINTHEX  49C
EXIT_LOOP           92A6
FILENAME            92A8
FIVE                101
FOUR                100
GET_NEXT_GET_TWO_BITS  4DA
GET_NIBBLE          4D4
GET_TWO_BITS        4D8
JSR_FIRST4          4
LEA_FIRST4          4
LF                  A
MOVEM_FIRST4        4
MOVE_FIRST2         0
MOVE_TO_REG         9292
NEWLINE             92FA
NO_TEST             9234
NUMERIC             928E
ONE                 1
OR_FIRST4           8
PRINTENDADDR        45E
PRINTHEX            46C
PRINTLET            4B4
PRINTNUM            49E
PRINTSEC            48E
PRINTSTARTADDR      444
RTS_FIRST4          4
SAVEENDADDR         438
SAVESTARTADDR       42C
SEVEN               111
SHIFTS_FIRST4       E
SIX                 110
START               408
STARTADDR           400
START_ADDR_PROMPT   92B2
STRING_TO_HEX       923A
SUB_FIRST4          9
SWAP                4CE
TEST                922E
THREE               11
TWO                 10
ZERO                0
